import requests
import discord
import os
from dotenv import load_dotenv

load_dotenv()

CHANNEL=int(os.getenv("CHANNEL",'0'))
TOKEN=os.getenv("TOKEN",'')
ROOT='https://lore.kernel.org/linux-cve-announce/'
SAVE_PATH='/workdir/notified.txt'

def send_msg(msg: discord.Embed):
    client = discord.Client(intents=discord.Intents.default())

    @client.event
    async def on_ready():
        await client.get_channel(CHANNEL).send(embed=msg)
        await client.close()

    client.run(TOKEN)

def main():
    with open(SAVE_PATH, 'r') as f:
        last_cve = f.read()
    r = requests.get(ROOT)
    first = True
    for t in r.text.split('\n'):
        if not t.startswith('href') or 'CVE' not in t or 'REJECTED' in t:
            continue
        if last_cve in t:
            break
        url = ROOT + t[6:t.find('">')]
        title = t[t.find('">')+2:-4]
        files = ''
        r = requests.get(url)
        is_in_list = False
        for t in r.text.split('\n'):
            if is_in_list:
                files += f'{t.strip()}\n'
            if 'The file(s) affected by this issue are:' in t:
                is_in_list = True
            if not t or 'Mitigation' in t:
                is_in_list = False

        if first:
            first = False
            with open(SAVE_PATH, 'w') as f:
                f.write(title[:title.find(':')])

        embed = discord.Embed(title=title, url=url)
        embed.add_field(name="Affected Files", value=files.strip(), inline=False)
        send_msg(embed)

if __name__ == '__main__':
    main()
